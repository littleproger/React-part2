{"version":3,"sources":["components/actions/actionsType.js","components/reducers/headerReducer.js","components/reducers/chatReducer.js","components/reducers/mainReducer.js","components/Logo.js","components/actions/messageActions.js","components/Chat/Header.js","components/helpers/Like.js","components/helpers/Delete.js","components/helpers/Edit.js","components/Chat/MyMessage.js","components/helpers/Avatar.js","components/Chat/OtherMessage.js","components/Chat/Message.js","components/Chat/Time.js","components/Chat/MessageList.js","components/actions/headerActions.js","components/Chat/MessageInput.js","components/Chat/Modal.js","components/animatedElem/Spiner.js","components/Chat/Chat.js","App.js","index.js"],"names":["ADD_NEW_MESSAGE","DELETE_MESSAGE","FETCHED_MESSAGES","SHOW_EDIT","HIDE_EDIT","EDIT_MESSAGE","CHANGE_HEADER_DATA","initialState","roomName","numberUsers","numberMessages","lastMessageDate","messages","myInform","userId","avatar","user","editMsg","id","text","mainReducer","combineReducers","header","state","action","type","payload","allUserId","map","msg","messagesLength","length","users","Set","createdAt","Date","toLocaleDateString","split","today","lastMsgTime","join","slice","size","chat","message","editedAt","filter","console","log","myMessage","lastMessage","alert","toString","Logo","className","showEdit","Header","props","roomInfo","Like","viewBox","width","height","stroke","fill","d","Delete","onClick","func","class","Edit","stroke-width","stroke-linecap","stroke-linejoin","points","MyMessage","data","newMsg","time","hour","minute","clickToEdit","deleteMessage","Avatar","src","alt","OtherMessage","Message","toLocaleTimeString","myId","helper","cls","Time","timeMessage","todayMonth","todayYear","dateNmb","monthNmb","yearNmb","toDateString","date","month","prevDate","mapDispatchToProps","changeHeaderData","connect","timeNow","MessageInput","inputHandlerNew","e","target","value","trim","uuidv4","setState","sendText","addMessage","editedMsg","name","placeholder","this","onChange","Component","Modal","inputHandlerEdit","editText","editMessage","hideEdit","Spiner","Chat","roomInform","edtMsg","fetch","then","response","json","addFetchedMessage","headerInform","App","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","app","render","document","getElementById"],"mappings":"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","file":"static/js/main.7d721965.chunk.js","sourcesContent":["export const ADD_NEW_MESSAGE = \"CHAT/ADD_NEW_MESSAGE\";\nexport const DELETE_MESSAGE = \"CHAT/DELETE_MESSAGE\";\nexport const FETCHED_MESSAGES = \"CHAT/FETCHED_MESSAGES\";\nexport const SHOW_EDIT = \"CHAT/SHOW_EDIT\";\nexport const HIDE_EDIT = \"CHAT/HIDE_EDIT\";\nexport const EDIT_MESSAGE = \"CHAT/EDIT_MESSAGE\";\n\n\nexport const CHANGE_HEADER_DATA = \"HEADER/CHANGE_HEADER_DATA\";","import { CHANGE_HEADER_DATA } from \"../actions/actionsType\";\nconst initialState = {\n  roomName: \"My chat\",\n  numberUsers: 0,\n  numberMessages: 0,\n  lastMessageDate: \"0\",\n};\n\nexport function headerReducer(state = initialState, action) {\n  switch (action.type) {\n    case CHANGE_HEADER_DATA:\n      const messages = action.payload;\n      const allUserId = messages.map((msg) => {\n        return msg.userId;\n      });\n\n      const messagesLength = messages.length;\n      const users = new Set(allUserId);\n\n      const createdAt = new Date(messages[messagesLength - 1].createdAt)\n        .toLocaleDateString()\n        .split(\".\");\n      const today = new Date().toLocaleDateString().split(\".\");\n\n      let lastMsgTime = createdAt.join(\".\").slice(0, 5);\n      if (createdAt[2] !== today[2]) {\n        lastMsgTime = createdAt.join(\".\");\n      }\n\n      return {...state,\n          numberUsers: users.size,\n          numberMessages: messagesLength,\n          lastMessageDate: lastMsgTime\n      };\n\n    default:\n      return state;\n  }\n}\n","import {\n  ADD_NEW_MESSAGE,\n  FETCHED_MESSAGES,\n  DELETE_MESSAGE,\n  SHOW_EDIT,\n  HIDE_EDIT,\n  EDIT_MESSAGE,\n} from \"../actions/actionsType\";\nconst initialState = {\n  messages: [],\n  myInform: {\n    userId: \"61325\",\n    avatar:\n      \"https://resizing.flixster.com/EVAkglctn7E9B0hVKJrueplabuQ=/220x196/v1.cjs0NjYwNjtqOzE4NDk1OzEyMDA7MjIwOzE5Ng\",\n    user: \"Yaroslav\",\n  },\n  editMsg: {\n    id: \"\",\n    editMsg: false,\n    text: \"\",\n  },\n};\n\nexport function chatReducer(state = initialState, action) {\n  switch (action.type) {\n    case ADD_NEW_MESSAGE:\n      const message = {\n        id: action.payload.id,\n        userId: state.myInform.userId,\n        avatar: state.myInform.avatar,\n        user: state.myInform.user,\n        text: action.payload.text,\n        createdAt: action.payload.createdAt,\n        editedAt: \"\",\n      };\n      return { ...state, messages: [...state.messages, message] };\n\n    case FETCHED_MESSAGES:\n      return { ...state, messages: [...state.messages, ...action.payload] };\n\n    case DELETE_MESSAGE:\n      return {\n        ...state,\n        messages: state.messages.filter(\n          (message) => message.id !== action.payload\n        ),\n      };\n\n    case SHOW_EDIT:\n      console.log(action.payload);\n      if (action.payload) {\n        const text = state.messages.filter(\n          (message) => message.id === action.payload\n        );\n        return {\n          ...state,\n          editMsg: { id: action.payload, editMsg: true, text: text[0].text },\n        };\n      } else {\n        const myMessage = state.messages.filter(\n          (message) => state.myInform.userId === message.userId\n        );\n        const lastMessage = myMessage[myMessage.length - 1];\n        if (lastMessage) {\n          return {\n            ...state,\n            editMsg: {\n              id: lastMessage.id,\n              editMsg: true,\n              text: lastMessage.text,\n            },\n          };\n        } else {\n          alert(\n            \"You must write message first!\\nThis button for edit last message!\"\n          );\n        }\n      }\n\n    case HIDE_EDIT:\n      return { ...state, editMsg: { id: \"\", editMsg: false, text: \"\" } };\n\n    case EDIT_MESSAGE:\n      return {\n        ...state,\n        messages: state.messages.map((message) => {\n          if (message.id === action.payload.id) {\n            message.text = action.payload.text;\n            message.editedAt = new Date().toString();\n          }\n          return message;\n        }),\n      };\n\n    default:\n      return state;\n  }\n}\n","import {combineReducers} from 'redux';\nimport {headerReducer} from './headerReducer';\nimport {chatReducer} from './chatReducer';\n\n\nexport const mainReducer = combineReducers({\n  header:headerReducer,\n  chat:chatReducer\n})","import React from 'react';\n\nfunction Logo() {\n    return (\n        <div className=\"logo-div\">\n            <h1>Logo</h1>\n        </div>\n    )\n}\n\nexport default Logo\n","import {ADD_NEW_MESSAGE, FETCHED_MESSAGES, DELETE_MESSAGE, SHOW_EDIT, EDIT_MESSAGE, HIDE_EDIT} from './actionsType';\n\nexport const addMessage = (data) =>{\n    return{\n        type:ADD_NEW_MESSAGE,\n        payload:data\n    };\n};\nexport const deleteMessage = (id) =>{\n    return{\n        type:DELETE_MESSAGE,\n        payload:id\n    };\n};\nexport const addFetchedMessage = (data) =>{\n    return{\n        type:FETCHED_MESSAGES,\n        payload:data\n    };\n};\nexport const showEdit = (id = null) =>{\n    return{\n        type:SHOW_EDIT,\n        payload:id\n    };\n}\nexport const editMessage = (data) =>{\n    return{\n        type:EDIT_MESSAGE,\n        payload:data\n    };\n}\nexport const hideEdit = () =>{\n    return{\n        type:HIDE_EDIT\n    };\n}","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Header(props) {\n    const roomInfo = props.roomInfo;\n    return (\n        <div className=\"room-header flex pos-right flex-spcbtwn flex-vertCntr pad-t_20px\">\n            <div className=\"flex flex-spcbtwn width_30prc pad-lr_30px\">\n                <h3>{roomInfo.roomName}</h3>\n                <h3>{roomInfo.numberUsers} participants</h3>\n                <h3>{roomInfo.numberMessages} message</h3>\n            </div>\n            <div className=\"pad-lr_30px\">\n                <h3>last message at {roomInfo.lastMessageDate}</h3>\n            </div>\n        </div>\n    )\n}\n\nHeader.propTypes = {\n  roomInfo: PropTypes.object\n};\n\nexport default Header\n","import React from \"react\";\n\nfunction Like(props) {\n  return (\n    <>\n      <svg\n        viewBox=\"0 0 15 15\"\n        width=\"20px\"\n        height=\"20px\"\n        stroke=\"black\"\n        fill=\"none\"\n        className=\"like\"\n      >\n        <path\n          d=\"M13.91,6.75c-1.17,2.25-4.3,5.31-6.07,6.94c-0.1903,0.1718-0.4797,0.1718-0.67,0C5.39,12.06,2.26,9,1.09,6.75&#xA;&#9;C-1.48,1.8,5-1.5,7.5,3.45C10-1.5,16.48,1.8,13.91,6.75z\"\n        />\n      </svg>\n    </>\n  );\n}\n\nexport default Like;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Delete(props) {\n    return (\n        <>\n            <svg onClick={props.func} className=\"msg-icon\" viewBox=\"0 0 64 58.67\">\n                <path d=\"M61.33,5.33H48V2.67A2.66,2.66,0,0,0,45.33,0H18.67A2.66,2.66,0,0,0,16,2.67V5.33H2.67a2.67,2.67,0,0,0,0,5.34H8v40a8,8,0,0,0,8,8H48a8,8,0,0,0,8-8v-40h5.33a2.67,2.67,0,1,0,0-5.34ZM50.67,50.67A2.67,2.67,0,0,1,48,53.33H16a2.67,2.67,0,0,1-2.67-2.66v-40H50.67Z\"/>\n                <path class=\"cls-1\" d=\"M24,45.33a2.67,2.67,0,0,0,2.67-2.66V21.33a2.67,2.67,0,0,0-5.34,0V42.67A2.67,2.67,0,0,0,24,45.33Z\"/>\n                <path class=\"cls-1\" d=\"M40,45.33a2.67,2.67,0,0,0,2.67-2.66V21.33a2.67,2.67,0,0,0-5.34,0V42.67A2.67,2.67,0,0,0,40,45.33Z\"/>\n            </svg>\n        </>\n    )\n}\nDelete.propTypes = {\n  func: PropTypes.func\n};\n\nexport default Delete\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Edit(props) {\n    return (\n        <>\n            <svg onClick={props.func} className=\"msg-icon\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                <polygon points=\"16 3 21 8 8 21 3 21 3 16 16 3\"/>\n            </svg>\n        </>\n    )\n}\nEdit.propTypes = {\n  func: PropTypes.func\n};\n\nexport default Edit\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport Like from \"../helpers/Like\";\nimport Delete from \"../helpers/Delete\";\nimport Edit from \"../helpers/Edit\";\n\nfunction MyMessage(props) {\n  return (\n    <div\n      id={props.data.id}\n      className=\" flex flex-vertCntr flex-drctCol marg-t_20px pos_right pad-r_10px\"\n    >\n      <div className=\"chat-msg chat-msg_rightDIV\">\n        <div className=\"chat-msg_right\">\n          <div className=\"font-mid\">{props.data.text}</div>\n          <div className=\"msg-date flex flex-spcbtwn\">\n            {props.newMsg\n              ? `${props.time.hour}:${props.time.minute}`\n              : `${props.time.hour}:${props.time.minute} (edited)`}\n          </div>\n        </div>\n        <div className=\"flex flex-vertCntr flex-spcbtwn width_100prc msg-iconDiv marg-t_20px\">\n          <div className=\"like-right_size marg-l_20px\">\n            <Like />\n          </div>\n          <div className=\"flex flex-vertCntr flex-spcbtwn smartIcon\">\n            <div className=\"flex flex-vertCntr edit-button \">\n              <Edit func={() => props.clickToEdit(props.data.id)} />\n            </div>\n            <Delete func={() => props.deleteMessage(props.data.id)} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nMyMessage.propTypes = {\n  time: PropTypes.object,\n  newMsg: PropTypes.bool,\n  data: PropTypes.object,\n  clickToEdit: PropTypes.func,\n  deleteMessage: PropTypes.func\n};\n\nexport default MyMessage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Avatar(props) {\n    return (\n        <div className=\"avatarDIV flex flex-vertCntr\">\n            <img className=\"avatar\" src={props.src} alt=\"Avatar\"/>\n        </div>\n    )\n}\n\nAvatar.propTypes = {\n  src: PropTypes.string\n};\n\nexport default Avatar\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport Avatar from \"../helpers/Avatar\";\nimport Like from \"../helpers/Like\";\n\nfunction OtherMessage(props) {\n  return (\n    <div className=\" flex flex-vertCntr pos_left marg-t_20px pad-l_10px\">\n      <Avatar src={props.data.avatar} />\n      <div className=\"chat-msg chat-msg_left\">\n        <div className=\"font-small\">{props.data.user}</div>\n        <div className=\"font-mid\">{props.data.text}</div>\n        <div className=\"msg-date\">\n          {props.newMsg\n            ? `${props.time.hour}:${props.time.minute}`\n            : `${props.time.hour}:${props.time.minute} (edited)`}\n        </div>\n        <div className=\"msg-iconDiv\">\n          <label>\n            <input type=\"checkbox\" className=\"likeDiv visible-hide\" />\n            <Like />\n          </label>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nOtherMessage.propTypes = {\n  time: PropTypes.object,\n  newMsg: PropTypes.bool,\n  data: PropTypes.object\n};\n\n\nexport default OtherMessage;\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport MyMessage from \"./MyMessage\";\nimport OtherMessage from \"./OtherMessage\";\n\nfunction Message(props) {\n  let [hour, minute] = \"\";\n  let newMsg = true;\n  if (props.data.editedAt) {\n    [hour, minute] = new Date(props.data.editedAt)\n      .toLocaleTimeString()\n      .split(\":\");\n    newMsg = false;\n  } else {\n    [hour, minute] = new Date(props.data.createdAt)\n      .toLocaleTimeString()\n      .split(\":\");\n  }\n\n  return (\n    <div>\n      {props.data.userId === props.myId ? (\n        <MyMessage\n          clickToEdit={props.clickToEdit}\n          deleteMessage={props.deleteMessage}\n          time={{ hour, minute }}\n          newMsg={newMsg}\n          data={props.data}\n        />\n      ) : (\n        <OtherMessage\n          time={{ hour, minute }}\n          newMsg={newMsg}\n          data={props.data}\n        />\n      )}\n    </div>\n  );\n}\n\nMessage.propTypes = {\n  myId: PropTypes.string,\n  data: PropTypes.object,\n  clickToEdit: PropTypes.func,\n  deleteMessage: PropTypes.func\n};\n\nexport default Message;\n","import React from \"react\";\nimport PropTypes from 'prop-types';\n\nfunction helper(text,cls){\n  return (\n        <div className=\"flex flex-horCntr pad-t_30px\">\n          <div className={`flex flex-centered ${cls}`}>\n            <h3>{text}</h3>\n          </div>\n        </div>\n      );\n}\n\nexport default function Time(props) {\n  const today = new Date().toLocaleDateString();\n  const timeMessage = new Date(props.data.createdAt).toLocaleDateString();\n  let [todayDay, todayMonth, todayYear] = new Date()\n    .toLocaleDateString()\n    .split(\".\");\n  let [dateNmb, monthNmb, yearNmb] = new Date(props.data.createdAt)\n    .toLocaleDateString()\n    .split(\".\");\n  let [date, month, year] = new Date(props.data.createdAt)\n    .toDateString()\n    .split(\" \");\n  if (props.prevDate !== timeMessage) {\n    if (timeMessage === today) {\n      return helper(\"Today\",props.cls)\n    }\n    if( todayYear !== yearNmb ){\n      return helper(`${dateNmb} ${monthNmb} ${yearNmb}`, props.cls)\n    }\n    if( todayMonth !== monthNmb){\n      return helper(`${date} ${month}`, props.cls)\n    }\n  } else {\n    return null;\n  }\n}\n\nTime.propTypes = {\n  prevDate: PropTypes.string,\n  cls: PropTypes.string,\n  data: PropTypes.object\n};","import { connect } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport { changeHeaderData } from \"../actions/headerActions\";\nimport React from \"react\";\nimport Message from \"./Message\";\nimport Time from './Time';\n\nfunction MessageList(props) {\n  let timeNow = new Date();\n  let prevDate = \"\";\n  let time;\n\n  props.changeHeaderData(props.messages);\n  return (\n    <div className=\"full-size flex-drctCol\">\n      {\n        props.messages.map((data) => {\n          if(timeNow !== new Date(data.createdAt).toLocaleDateString()){\n            time = <Time data={data} prevDate={prevDate} cls={\"date-block\"} key={new Date()}/>\n            prevDate = new Date(data.createdAt).toLocaleDateString();\n          }\n            return (\n            <>\n                {time}\n                <Message\n                    data={data}\n                    myId={props.myId}\n                    deleteMessage={props.deleteMessage}\n                    clickToEdit={props.clickToEdit}\n                    key={data.id}\n                />\n            </>\n            );\n        })\n      }\n    </div>\n  );\n}\n\nMessageList.propTypes = {\n  myId: PropTypes.string,\n  messages: PropTypes.array,\n  clickToEdit: PropTypes.func,\n  changeHeaderData: PropTypes.func,\n  deleteMessage: PropTypes.func\n};\n\nconst mapDispatchToProps = {\n  changeHeaderData,\n};\n\nexport default connect(null, mapDispatchToProps)(MessageList);\n","import {CHANGE_HEADER_DATA} from './actionsType';\n\nexport const changeHeaderData = (messages) =>{\n    return{\n        type:CHANGE_HEADER_DATA,\n        payload:messages\n    };\n};","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport { addMessage, showEdit } from \"../actions/messageActions\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nclass MessageInput extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      msg: {\n        id: \"\",\n        text: \"\",\n        createdAt: \"\",\n      },\n      editedMsg: {\n        id: \"\",\n        text: \"\",\n      },\n    };\n  }\n  inputHandlerNew = (e) => {\n    const text = e.target.value.trim();\n    const id = uuidv4();\n    const date = new Date();\n    this.setState({\n      msg: {\n        text: text,\n        id: id,\n        createdAt: date.toString(),\n      },\n    });\n  };\n\n  sendText = () => {\n    if (this.state.msg.text) {\n      this.props.addMessage(this.state.msg);\n      this.state.msg.text = \"\";\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"pad-lr_30px chat-msg_submit flex flex-vertCntr\">\n          <input\n            className=\"chat-msg_input\"\n            type=\"text\"\n            name=\"message\"\n            placeholder=\"Message\"\n            value={this.state.msg.text}\n            onChange={(e) => this.inputHandlerNew(e)}\n          />\n          <button className=\"chat-msg_button\" onClick={this.sendText}>\n            Send\n          </button>\n          <button className=\"chat-msg_button editButton_size\" onClick={()=>this.props.showEdit()}>&#11014;</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nMessageInput.propTypes = {\n  messages: PropTypes.array,\n  addMessage: PropTypes.func,\n  showEdit: PropTypes.func,\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    messages: state.chat.messages,\n  };\n};\nconst mapDispatchToProps = {\n  addMessage,\n  showEdit\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MessageInput);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport { hideEdit, editMessage } from \"../actions/messageActions\";\n\nclass Modal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editedMsg: {\n        id: \"\",\n        text: \"\",\n      },\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      editedMsg: {\n        id: \"\",\n        text: this.props.editMsg.text,\n      },\n    });\n  }\n\n  inputHandlerEdit = (e) => {\n    const text = e.target.value;\n    this.setState({\n      editedMsg: {\n        id: this.props.editMsg.id,\n        text: text,\n      },\n    });\n  };\n\n  editText = () => {\n    this.props.editMessage(this.state.editedMsg);\n    this.props.hideEdit();\n    this.state.editedMsg.text = \"\";\n  };\n  render() {\n    if (this.props.editMsg) {\n      if (this.props.editMsg.editMsg) {\n        return (\n          <div className=\"modal flex flex-drctCol flex-vertCntr flex-spcarrnd flex-horCntr\">\n            <h2>Edit message</h2>\n            <input\n              className=\"editMsg-input\"\n              type=\"textarea\"\n              name=\"Edit message\"\n              placeholder={this.props.editMsg.text}\n              onChange={(e) => this.inputHandlerEdit(e)}\n            />\n            <div className=\"editMsg-buttonDiv flex flex-vertCntr flex-spcbtwn \">\n              <button\n                className=\"editMsg-button chat-msg_button\"\n                type=\"button\"\n                onClick={this.editText}\n              >\n                Ok\n              </button>\n              <button\n                className=\"editMsg-button chat-msg_button\"\n                type=\"button\"\n                onClick={this.props.hideEdit}\n              >\n                Cancel\n              </button>\n            </div>\n          </div>\n        );\n      } else {\n        return null;\n      }\n    } else {\n      return null;\n    }\n  }\n}\n\nModal.propTypes = {\n  editMsg: PropTypes.object,\n  hideEdit: PropTypes.func,\n  editMessage: PropTypes.func,\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    editMsg: state.chat.editMsg,\n  };\n};\nconst mapDispatchToProps = {\n  hideEdit,\n  editMessage,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Modal);\n","import React from 'react';\nimport '../../styles/spiner.css';\n\nexport default function Spiner() {\n    return (\n        <div className=\"flex flex-centered full-size\">\n            <div className=\"spiner\">\n                \n            </div>\n        </div>\n    )\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from 'prop-types';\n\nimport { addFetchedMessage, deleteMessage, showEdit } from \"../actions/messageActions\";\nimport { changeHeaderData } from \"../actions/headerActions\";\n\nimport Header from \"./Header\";\nimport MessageList from \"./MessageList\";\nimport MessageInput from \"./MessageInput\";\nimport Modal from \"./Modal\";\nimport Spiner from \"../animatedElem/Spiner\";\n\nclass Chat extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      roomInform: {\n        roomName: \"My chat\",\n        numberUsers: 0,\n        numberMessages: 0,\n        lastMessageDate: \"0\",\n      },\n      messages: [],\n      myInform: {\n        userId: \"61325\",\n        avatar:\n          \"https://resizing.flixster.com/EVAkglctn7E9B0hVKJrueplabuQ=/220x196/v1.cjs0NjYwNjtqOzE4NDk1OzEyMDA7MjIwOzE5Ng\",\n        user: \"Wendy\",\n      },\n      edtMsg: {\n        id: \"\",\n        editMsg: false,\n        text: \"\",\n      },\n    };\n  }\n  \n  componentDidMount() {\n    fetch(\"https://edikdolynskyi.github.io/react_sources/messages.json\")\n      .then((response) => response.json())\n      .then((data) => {\n        this.props.addFetchedMessage(data);\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"pad-lr_chat\">\n        <Modal />\n        <Header roomInfo={this.props.headerInform} />\n        <div className=\"chat-messageWndw marg-t_20px\">\n          {this.props.messages.length !== 0 ? (\n            <MessageList\n              messages={this.props.messages}\n              myId={this.props.myInform.userId}\n              deleteMessage={this.props.deleteMessage}\n              clickToEdit={this.props.showEdit}\n            />\n          ) : (\n            <Spiner />\n          )}\n        </div>\n        <MessageInput addMessage={this.props.addMessage} />\n      </div>\n    );\n  }\n}\n\nChat.propTypes = {\n  messages: PropTypes.array,\n  myInform: PropTypes.object,\n  headerInform: PropTypes.object,\n  addFetchedMessage: PropTypes.func,\n  deleteMessages: PropTypes.func,\n  showEdit:PropTypes.func\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    messages: state.chat.messages,\n    myInform: state.chat.myInform,\n    headerInform: state.header,\n  };\n};\nconst mapDispatchToProps = {\n  addFetchedMessage,\n  deleteMessage,\n  showEdit\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Chat);\n","import './App.css';\nimport Logo from './components/Logo.js';\nimport Chat from './components/Chat/Chat';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Logo />\n      <Chat />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport {render} from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport { mainReducer } from './components/reducers/mainReducer';\nimport './index.css';\nimport App from './App';\n\nconst store = createStore(\n  mainReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n );\n \nconst app = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nrender(\n  app,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}